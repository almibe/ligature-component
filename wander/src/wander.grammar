@precedence { high }

@top Script { list<Expression> }

single { Field | !high Bool | !high Int | String | Module | Array | Grouping | When | Lambda | !high Pipe | Name }
Expression { single | Application }

String { !high string }
Module { !high "{" list<Field | Name>? "}" }
Array  { !high "[" list<Expression>? "]" }
Grouping { !high "(" list<Expression>? ")" }
When { !high "when" list<(Expression "=>" Expression ",")> "end" }
Lambda { !high "\\" Name+ "->" Expression }
Application { single single+ }

Field { !high Name "=" Expression }

@tokens {
  Pipe { '|' }
  Bool { "true" | "false" }
  Int { '-'? int }
  int  { '0' | $[1-9] @digit* }
  Comment[isolate] { "--" ![\n]* }

  Name { $[a-zA-Z_]$[\.0-9a-zA-Z-_]* }
  string { 'i'? '"' char* '"' }
  char { $[\u{20}\u{21}\u{23}-\u{5b}\u{5d}-\u{10ffff}] | "\\" esc }
  esc  { $["\\\/bfnrt] | "u" hex hex hex hex }
  hex  { $[0-9a-fA-F] }

  whitespace { $[ \n\r\t] }

  @precedence { "when", "end", Bool, "->", string, Name, Pipe }
}

@skip { whitespace | Comment }
list<item> { item ("," item)* ","? }

@detectDelim