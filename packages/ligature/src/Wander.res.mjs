// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Model from "./Model.res.mjs";
import * as Js_exn from "rescript/lib/es6/js_exn.js";
import * as Commands from "./Commands.res.mjs";
import * as Caml_option from "rescript/lib/es6/caml_option.js";
import * as WanderParser from "./WanderParser.res.mjs";
import * as Belt_MapString from "rescript/lib/es6/belt_MapString.js";

function run(script, modulesOpt) {
  var modules = modulesOpt !== undefined ? Caml_option.valFromOption(modulesOpt) : Commands.stdModules();
  var script$1 = WanderParser.parse(script);
  var result = {
    contents: {
      TAG: "Ok",
      _0: undefined
    }
  };
  script$1.forEach(function (call) {
        var parts = call.commandName.split(".");
        if (parts.length !== 2) {
          return ;
        }
        var moduleName = parts[0];
        var commandName = parts[1];
        var mod = Belt_MapString.get(modules, moduleName);
        if (mod !== undefined) {
          var command = Belt_MapString.get(Caml_option.valFromOption(mod), commandName);
          if (command !== undefined) {
            result.contents = command(call.arguments);
            return ;
          } else {
            return ;
          }
        }
        throw {
              RE_EXN_ID: "Failure",
              _1: "Could not find command: " + call.commandName,
              Error: new Error()
            };
      });
  return result.contents;
}

function printResult(value) {
  if (value.TAG !== "Ok") {
    return value._0;
  }
  var value$1 = value._0;
  if (value$1 !== undefined) {
    return Model.printValue(value$1);
  } else {
    return "--nothing--";
  }
}

function toJs(result) {
  if (result.TAG !== "Ok") {
    return {
            NAME: "Error",
            VAL: result._0
          };
  }
  var match = result._0;
  if (match === undefined) {
    return Js_exn.raiseError("C:\\Users\\berry3\\vsCodeProjects\\ligature-components\\packages\\ligature\\src\\Wander.res:67:1963-1968 - Todo");
  }
  if (typeof match !== "object") {
    return Js_exn.raiseError("C:\\Users\\berry3\\vsCodeProjects\\ligature-components\\packages\\ligature\\src\\Wander.res:67:1963-1968 - Todo");
  }
  if (match.TAG !== "Network") {
    return Js_exn.raiseError("C:\\Users\\berry3\\vsCodeProjects\\ligature-components\\packages\\ligature\\src\\Wander.res:67:1963-1968 - Todo");
  }
  var result$1 = [];
  match._0.value.forEach(function (triple) {
        var e = triple.element;
        var element;
        element = e.TAG === "Element" ? ({
              type: "element",
              value: e._0.value
            }) : ({
              type: "slot",
              value: e._0.value
            });
        var e$1 = triple.role;
        var role;
        role = e$1.TAG === "Element" ? ({
              type: "element",
              value: e$1._0.value
            }) : ({
              type: "slot",
              value: e$1._0.value
            });
        var e$2 = triple.value;
        var value;
        switch (e$2.TAG) {
          case "VElement" :
              value = {
                type: "element",
                value: e$2._0.value
              };
              break;
          case "VSlot" :
              value = {
                type: "slot",
                value: e$2._0.value
              };
              break;
          case "VLiteral" :
              value = {
                type: "literal",
                value: e$2._0.value
              };
              break;
          
        }
        result$1.push({
              type: "triple",
              element: element,
              role: role,
              value: value
            });
      });
  return {
          NAME: "Network",
          VAL: result$1
        };
}

export {
  run ,
  printResult ,
  toJs ,
}
/* WanderParser Not a pure module */
