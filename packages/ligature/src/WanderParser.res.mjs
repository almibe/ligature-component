// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Ligature from "./Ligature.res.mjs";
import * as WanderTokenizerJs from "./WanderTokenizer.js";

function reset(prim) {
  WanderTokenizerJs.reset(prim);
}

function next(prim) {
  return WanderTokenizerJs.next();
}

function parseTokens() {
  var match = WanderTokenizerJs.next();
  if (match === null || match === undefined) {
    if (match === null) {
      return [];
    } else {
      return [];
    }
  }
  switch (match.type) {
    case "comma" :
        return ["Comma"];
    case "element" :
        return [{
                  TAG: "Element",
                  _0: Ligature.element(match.value)
                }];
    case "literal" :
        return [{
                  TAG: "Literal",
                  _0: Ligature.literal(match.value)
                }];
    case "pipe" :
        return ["Pipe"];
    case "variable" :
        return [{
                  TAG: "Variable",
                  _0: Ligature.variable(match.value)
                }];
    default:
      throw {
            RE_EXN_ID: "Failure",
            _1: "Unexpected value.",
            Error: new Error()
          };
  }
}

function parse(script) {
  WanderTokenizerJs.reset(script);
  return parseTokens();
}

function readTriple() {
  return null;
}

function readNetwork() {
  return null;
}

function readIgnoreWS() {
  while(true) {
    var value = WanderTokenizerJs.next();
    if (value === null || value === undefined) {
      return null;
    }
    if (value.type !== "ws") {
      return value;
    }
    continue ;
  };
}

function readElementVariable() {
  readIgnoreWS();
}

function readToken() {
  
}

export {
  reset ,
  next ,
  parseTokens ,
  parse ,
  readTriple ,
  readNetwork ,
  readIgnoreWS ,
  readElementVariable ,
  readToken ,
}
/* Ligature Not a pure module */
